services:
  postgres:
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./app/db-data/postgres/:/var/lib/postgresql/data/
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 3s
      timeout: 2s
      retries: 5

  zookeeper:
    image: 'wurstmeister/zookeeper:latest'
    ports:
      - 2181:2181
    restart: always

  kafka:
    image: 'wurstmeister/kafka:latest'
    ports:
      - 9092:9092
      - 29092:29092
    restart: always
    environment:
      KAFKA_LISTENERS: EXTERNAL_SAME_HOST://:29092,INTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL_SAME_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181" ]
      interval: 3s
      timeout: 2s
      retries: 10
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

  api-app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "8080:8080"
    restart: always
    env_file:
      - .env
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./app/logs:/var/log/app

  victoriadb:
    image: victoriametrics/victoria-metrics
    ports:
      - "8428:8428"
    command: '-storageDataPath=/victoria-metrics-data'

  vmagent:
    image: victoriametrics/vmagent
    ports:
      - "8429:8429"
    command: |
      -remoteWrite.url=http://victoriadb:8428/api/v1/write
      -promscrape.config=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro